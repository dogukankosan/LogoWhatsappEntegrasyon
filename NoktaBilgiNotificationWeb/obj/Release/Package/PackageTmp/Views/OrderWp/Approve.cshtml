@using System.Web.Mvc
@{
    Layout = null;
    string ficheNo = ViewBag.orderFicheNo ?? "";
    string orderID = ViewBag.OrderID ?? "";
    string token = ViewBag.Token ?? "";
    string password = ViewBag.Password ?? "";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Bilgilendirme Servisi</title>
    <meta name="robots" content="noindex, nofollow" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" defer crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="icon" type="image/x-icon" href="@Url.Content("~/favicon.ico")" />
    <style>
    body {
        font-family: Arial, sans-serif;
        background: linear-gradient(to right, #ccc, #eee);
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
        margin: 0;
        background-image: url('@Url.Content("~/20943863.jpg")');
        background-size: 900px auto;
        background-position: center center;
        background-repeat: no-repeat;
        background-attachment: fixed;
    }
    </style>
</head>
<body>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const ficheNo = @Html.Raw(Json.Encode(ficheNo));
            const orderID = @Html.Raw(Json.Encode(orderID));
            const token = @Html.Raw(Json.Encode(token));
            const password = @Html.Raw(Json.Encode(password));
            const submitForm = (action, reason) => {
                const form = document.createElement("form");
                form.method = "POST";
                form.action = "@Url.Action("ConfirmOrder", "OrderWp")";
                const addField = (name, value) => {
                    const input = document.createElement("input");
                    input.type = "hidden";
                    input.name = name;
                    input.value = value;
                    form.appendChild(input);
                };
                addField("token", token);
                addField("password", password);
                addField("ficheNo", ficheNo);
                addField("OrderID", orderID);
                addField("action", action);
                if (reason) addField("reason", reason);
                document.body.appendChild(form);
                form.submit();
            };
            setTimeout(() => {
                Swal.fire({
                    icon: 'warning',
                    title: 'Logo Sipariş Onayı',
                    text: 'Sipariş Fiş No: ' + ficheNo + ' Onaylıyor musunuz?',
                    showCancelButton: true,
                    confirmButtonText: '✅ Evet, Onayla',
                    cancelButtonText: '❌ Hayır, Reddet',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33'
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Onaylandı!',
                            text: 'Sipariş başarıyla onaylandı.',
                            confirmButtonColor: 'green'
                        }).then(() => {
                            submitForm('approve', '');
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire({
                            title: 'Reddetme Sebebi',
                            input: 'text',
                            inputLabel: 'Lütfen iptal sebebini yazınız:',
                            inputPlaceholder: 'Sebep giriniz...',
                            inputValidator: (value) => {
                                   if (!value) return 'Sebep alanı boş bırakılamaz!';
                                if (value.length > 50) return 'Sebep en fazla 50 karakter olabilir!';
                            },
                            showCancelButton: true,
                            confirmButtonText: 'Gönder',
                            cancelButtonText: 'Vazgeç'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Reddedildi!',
                                    text: 'Sipariş reddedildi.',
                                    confirmButtonColor: 'red'
                                }).then(() => {
                                    submitForm('reject', result.value);
                                });
                            }
                        });
                    }
                });
            }, 500);
        });
    </script>
</body>
</html>